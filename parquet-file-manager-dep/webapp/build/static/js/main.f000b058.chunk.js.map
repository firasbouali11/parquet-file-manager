{"version":3,"sources":["constants/constants.js","components/custom-search/CustomSearch.jsx","components/modal/CModal.jsx","pages/columns/Columns.jsx","pages/schema/Schema.jsx","pages/addcolumn/AddColumn.jsx","pages/deletecolumn/DeleteColumn.jsx","pages/add/Add.jsx","pages/update/Update.jsx","pages/home/Home.jsx","components/appbar/Appbar.jsx","components/radio/CRadio.jsx","components/global/Global.jsx","components/spinner/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["HOST","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","searchKeys","CustomSearch","panel","classes","React","useState","expanded","setExpanded","store","useContext","Context","getSpecificData","a","setLoading","keys","Object","values","i","length","console","log","fetch","method","headers","body","JSON","stringify","filename","localStorage","getItem","selector","selectorValue","req","json","resp","Swal","fire","position","icon","title","showConfirmButton","timer","status","message","setData","data","reset","document","querySelectorAll","value","className","Accordion","onChange","event","isExpanded","AccordionSummary","expandIcon","id","Typography","AccordionDetails","Grid","container","columns","map","col","item","md","TextField","label","e","target","style","display","justifyContent","alignItems","marginTop","marginBottom","Button","variant","btnActive","onClick","modal","margin","paper","backgroundColor","background","border","boxShadow","shadows","padding","spacing","maxHeight","maxWidth","table","CModal","open","setOpen","deleteData","handleClose","parse","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","row","align","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","type","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","name","getData","selected","downloadParquetFile","setTabNumber","sendSelected","Toolbar","clsx","marginLeft","Tooltip","IconButton","minWidth","clip","height","overflow","top","Columns","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","history","useHistory","jsonString","allKeys","allValues","undefined","schema","includes","push","many","blob","csvURL","window","URL","createObjectURL","tempLink","createElement","href","setAttribute","click","setBtnActive","setColumns","setName","deleteManyData","responses","size","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","key","toString","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","tableWrapper","Schema","scope","formControl","selectEmpty","AddColumn","setCol","setType","defaultValue","setDefaultValue","arrayType","setArrayType","appear","setAppear","addC","converted","parseFloat","toLowerCase","split","isNaN","default","valueType","getSchema","elevation","FormControl","InputLabel","Select","t","MenuItem","disabled","DeleteColumn","deleteC","Add","record","addData","r","test","replace","fill","Update","fields","updatedData","getElementsByClassName","useEffect","getElementsByTagName","updateData","newValues","newKeys","replaceAll","TabPanel","children","other","hidden","Box","p","a11yProps","Home","useTheme","AppBar","Tabs","tabNumber","newValue","indicatorColor","textColor","Tab","disbaleUpdateBtn","axis","onChangeIndex","dir","flexGrow","menuButton","marginRight","Appbar","edge","CRadio","setValue","inputfile","useRef","uploadFile","formdata","FormData","append","files","returning","setItem","ref","RadioGroup","Radio","current","fullWidth","Global","override","css","Spinner","loading","createContext","App","setSchema","setDisabledUpdatedBtn","resp2","returnedData","alert","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f000b058.chunk.js","sourcesContent":["const HOSTIP = \"api\"; //\"10.1.1.93\"\r\nconst HOSTPORT = \"5050\";\r\nexport const HOST = `/api/`;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport Swal from \"sweetalert2\";\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nlet searchKeys = {};\r\n\r\nexport default function CustomSearch() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const store = React.useContext(Context);\r\n\r\n  const getSpecificData = async () => {\r\n    store.setLoading(true);\r\n    let keys = Object.keys(searchKeys);\r\n    let values = Object.values(searchKeys);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (values[i] === \"\") delete searchKeys[keys[i]];\r\n    }\r\n    console.log(searchKeys);\r\n    const req = await fetch(HOST + \"one\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: Object.keys(searchKeys),\r\n        selectorValue: Object.values(searchKeys),\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    console.log(resp);\r\n    if (resp.length === 0) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"warning\",\r\n        title: \"there is no data\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } else if (resp[0].status === \"error\") {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } else {\r\n      store.setData(resp);\r\n      console.log(store.data);\r\n\r\n      // console.log(reset);\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Here is your data !\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    searchKeys = {};\r\n    const reset = document.querySelectorAll(\".textfield1 input\");\r\n    for (let e of reset) e.value = null;\r\n    store.setLoading(false);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Custom Search</Typography>\r\n          {/* <SearchIcon /> */}\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container>\r\n            {store.columns.map((col) => (\r\n              <Grid key={col} item md={3}>\r\n                <center>\r\n                  <TextField\r\n                    className=\"textfield1\"\r\n                    label={col}\r\n                    onChange={(e) => {\r\n                      searchKeys[col] = e.target.value;\r\n                    }}\r\n                  />\r\n                </center>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </AccordionDetails>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 30,\r\n            marginBottom: 30,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              display: store.btnActive ? \"block\" : \"none\",\r\n            }}\r\n            onClick={getSpecificData}\r\n          >\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"0 10%\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxHeight: 800,\r\n    maxWidth: \"80%\",\r\n  },\r\n  table: {\r\n    maxHeight: 600,\r\n    maxWidth: 300,\r\n  },\r\n}));\r\n\r\nexport default function CModal({ open, setOpen, data, deleteData }) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const columns = Object.keys(JSON.parse(data[0]));\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h1 id=\"transition-modal-title\">\r\n              You have {data.length} records to remove! are you sure ?\r\n            </h1>\r\n            <TableContainer style={{ maxHeight: 600 }} component={Paper}>\r\n              <Table\r\n                stickyHeader\r\n                className={classes.table}\r\n                aria-label=\"simple table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((col) => (\r\n                      <TableCell>{col}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.map((row, i) => (\r\n                    <TableRow key={i}>\r\n                      {columns.map((col) => (\r\n                        <TableCell align=\"right\">\r\n                          {JSON.parse(row)[col]}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <center>\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleClose();\r\n                  deleteData();\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </center>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport CustomSearch from \"../../components/custom-search/CustomSearch\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Swal from \"sweetalert2\";\r\nimport CModal from \"../../components/modal/CModal\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    columns,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell}\r\n            align=\"left\"\r\n            padding={headCell ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell}\r\n              direction={orderBy === headCell ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell)}\r\n            >\r\n              {headCell}\r\n              {orderBy === headCell ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    name,\r\n    setOpen,\r\n    getData,\r\n    selected,\r\n    btnActive,\r\n    downloadParquetFile,\r\n    setTabNumber,\r\n    sendSelected,\r\n  } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {name}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginLeft: 45,\r\n              display: btnActive ? \"\" : \"none\",\r\n            }}\r\n            onClick={() => getData(localStorage.getItem(\"file\"))}\r\n          >\r\n            <CachedIcon />\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ display: btnActive ? \"\" : \"none\", marginLeft: 30 }}\r\n            onClick={downloadParquetFile}\r\n          >\r\n            Download\r\n          </Button>\r\n        </Typography>\r\n      )}\r\n\r\n      {\r\n        numSelected > 0 ? (\r\n          <>\r\n            {numSelected === 1 ? (\r\n              <Tooltip title=\"update\">\r\n                <IconButton>\r\n                  <CreateIcon\r\n                    onClick={\r\n                      () => {\r\n                        setTabNumber(3);\r\n                        sendSelected(JSON.parse(selected[0]));\r\n                      }\r\n                      // history.push({\r\n                      //   pathname: \"/update\",\r\n                      //   state: JSON.parse(selected[0]),\r\n                      // })\r\n                    }\r\n                  />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : null}\r\n\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton aria-label=\"delete\">\r\n                <DeleteIcon onClick={() => setOpen(true)} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </>\r\n        ) : null\r\n        // <Tooltip title=\"Filter list\">\r\n        //   <IconButton aria-label=\"filter list\">\r\n        //     <FilterListIcon />\r\n        //   </IconButton>\r\n        // </Tooltip>\r\n      }\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Columns() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  const store = React.useContext(Context);\r\n\r\n  const deleteData = async (jsonString) => {\r\n    let resp;\r\n    let data = JSON.parse(jsonString);\r\n    let keys = [];\r\n    let values = [];\r\n    let allKeys = Object.keys(data);\r\n    let allValues = Object.values(data);\r\n    for (let i = 0; i < allKeys.length; i++) {\r\n      if (allValues[i] === null || allValues[i] === undefined)\r\n        console.log(\"ok\");\r\n      else {\r\n        if (store.schema[allKeys[i]].includes(\"Array\") === false) {\r\n          keys.push(allKeys[i] + \"\");\r\n          values.push(allValues[i] + \"\");\r\n          console.log(keys[i] + \":\" + values[i]);\r\n        }\r\n      }\r\n    }\r\n    console.log(\r\n      JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: keys,\r\n        selectorValue: values,\r\n        many: false,\r\n      })\r\n    );\r\n    let req = await fetch(HOST, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: keys,\r\n        selectorValue: values,\r\n        many: false,\r\n      }),\r\n    });\r\n    resp = await req.json();\r\n    return resp;\r\n  };\r\n\r\n  const downloadParquetFile = async () => {\r\n    store.setLoading(true)\r\n    const req = await fetch(HOST + \"download\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n      }),\r\n    });\r\n\r\n    const resp = await req.blob();\r\n    console.log(resp);\r\n    var csvURL = window.URL.createObjectURL(resp);\r\n    let tempLink = document.createElement(\"a\");\r\n    tempLink.href = csvURL;\r\n    tempLink.setAttribute(\"download\", \"result.zip\");\r\n    tempLink.click();\r\n\r\n    await fetch(HOST + \"clean\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n      }),\r\n    });\r\n    store.setData([])\r\n    store.setBtnActive(false)\r\n    store.setColumns([])\r\n    store.setName(\"No Data !\")\r\n    store.setLoading(false)\r\n  \r\n  };\r\n\r\n  const deleteManyData = async () => {\r\n    let responses = [];\r\n    store.setLoading(true);\r\n    for (let row of selected) {\r\n      let resp = await deleteData(row);\r\n      responses.push(resp);\r\n    }\r\n    for (let resp of responses) {\r\n      if (resp[0].status !== \"success\") {\r\n        Swal.fire({\r\n          icon: resp[0].status,\r\n          title: resp[0].message,\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    Swal.fire({\r\n      icon: responses[0][0].status,\r\n      title: responses[0][0].message,\r\n      showConfirmButton: false,\r\n      timer: 2000,\r\n    });\r\n    setSelected([]);\r\n    store.getData(localStorage.getItem(\"file\"));\r\n    store.setLoading(false);\r\n  };\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = store.data.map((n) => JSON.stringify(n));\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CustomSearch />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          name={store.name}\r\n          selected={selected}\r\n          setOpen={setOpen}\r\n          getData={store.getData}\r\n          history={history}\r\n          btnActive={store.btnActive}\r\n          downloadParquetFile={downloadParquetFile}\r\n          setTabNumber={store.setTabNumber}\r\n          sendSelected={store.setSelected}\r\n        />\r\n        <TableContainer style={{ maxHeight: 500 }}>\r\n          <Table\r\n            stickyHeader\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={store.data.length}\r\n              columns={store.columns}\r\n            />\r\n            <TableBody>\r\n              {stableSort(store.data, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(JSON.stringify(row));\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) =>\r\n                        handleClick(event, JSON.stringify(row))\r\n                      }\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          color=\"primary\"\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {Object.keys(store.data[0]).map((key, i) => (\r\n                        <TableCell key={i} align=\"left\">\r\n                          {typeof row[key] == \"object\"\r\n                            ? JSON.stringify(row[key])\r\n                            : row[key].toString()}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={store.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={dense}\r\n            onChange={handleChangeDense}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n      {open && (\r\n        <CModal\r\n          open={open}\r\n          setOpen={setOpen}\r\n          data={selected}\r\n          deleteData={deleteManyData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Context } from \"../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"100%\",\r\n  },\r\n  tableWrapper: {\r\n    width: \"50%\",\r\n    margin: \"20px auto\",\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function Schema() {\r\n  const classes = useStyles();\r\n  const store = React.useContext(Context);\r\n\r\n  return (\r\n    <TableContainer className={classes.tableWrapper} component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Columns</TableCell>\r\n            <TableCell align=\"center\">Types</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.keys(store.schema).map((row, i) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {Object.values(store.schema)[i]}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./AddColumn.css\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport { Context } from \"../../App\";\r\nimport Swal from \"sweetalert2\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction AddColumn() {\r\n  const types = [\"Integer\", \"Double\", \"String\", \"Array\", \"Boolean\"];\r\n  const arraytypes = [\"Integer\", \"Double\", \"String\", \"Boolean\"];\r\n  const classes = useStyles();\r\n  const [col, setCol] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [defaultValue, setDefaultValue] = React.useState(\"\");\r\n  const [arrayType, setArrayType] = React.useState(\"\");\r\n  const [appear, setAppear] = React.useState(false);\r\n  const store = React.useContext(Context);\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    if (event.target.value === \"Array\") setAppear(true);\r\n    else setAppear(false);\r\n  };\r\n\r\n  const typeConverter = (value) => {\r\n    if (type === \"Integer\") return parseInt(value);\r\n    else if (type === \"Double\") return parseFloat(value);\r\n    else if (type === \"Boolean\") {\r\n      if (value.toLowerCase() === \"false\") return false;\r\n      else if (value.toLowerCase() === \"true\") return true;\r\n      else return \"not a boolean\";\r\n    } else if (type === \"Array\") {\r\n      if (arrayType === \"Integer\")\r\n        return value.split(\",\").map((e) => parseInt(e));\r\n      else if (arrayType === \"Double\")\r\n        return value.split(\",\").map((e) => parseFloat(e));\r\n      else if (arrayType === \"Boolean\") {\r\n        if (value.toLowerCase() === \"false\")\r\n          return value.split(\",\").map((e) => false);\r\n        else if (value.toLowerCase() === \"true\")\r\n          return value.split(\",\").map((e) => false);\r\n        else return \"not a boolean\";\r\n      } else return value.split(\",\");\r\n    } else return value;\r\n  };\r\n\r\n  const addC = async () => {\r\n    store.setLoading(true);\r\n    const converted = typeConverter(defaultValue);\r\n    if (converted === \"not a boolean\") {\r\n      store.setLoading(false);\r\n\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Boolean values should be 'true' or 'false'\",\r\n      });\r\n    } else if (isNaN(converted) && type !== \"Array\" && type !== \"String\") {\r\n      store.setLoading(false);\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Make sure you add a numerical value to the default value\",\r\n      });\r\n    }\r\n    const req = await fetch(HOST + \"col\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        col,\r\n        default: converted,\r\n        valueType: arrayType,\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    if (req.status === 200) {\r\n      store.getData(localStorage.getItem(\"file\"));\r\n      store.getSchema();\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n      store.setTabNumber(0)\r\n    } else {\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"paper\">\r\n      <center>\r\n        <h1 className=\"title\">Add a column</h1>\r\n        <div className=\"holder\">\r\n          <TextField\r\n            className=\"textfield\"\r\n            id=\"colnameadd\"\r\n            label=\"Column Name\"\r\n            value={col}\r\n            onChange={(e) => setCol(e.target.value)}\r\n          />\r\n          <br />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={type}\r\n              onChange={handleChange}\r\n            >\r\n              {types.map((t) => (\r\n                <MenuItem value={t}>{t}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            className={classes.formControl}\r\n            style={{\r\n              display: appear === true ? \"flex\" : \"none\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">Array Type</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={arrayType}\r\n              onChange={(e) => setArrayType(e.target.value)}\r\n            >\r\n              {arraytypes.map((t) => (\r\n                <MenuItem value={t}>{t}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            className=\"textfield\"\r\n            id=\"defaultval\"\r\n            label=\"Default value\"\r\n            value={defaultValue}\r\n            onChange={(e) => setDefaultValue(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            // className=\"btn\"\r\n            style={{ marginLeft: 30 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={addC}\r\n            disabled={type === \"\"}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </center>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AddColumn;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./DeleteColumn.css\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction DeleteColumn() {\r\n  const [col, setCol] = React.useState(\"\");\r\n  const store = React.useContext(Context);\r\n\r\n  const deleteC = async () => {\r\n    store.setLoading(true);\r\n    const req = await fetch(HOST + \"col\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        col,\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    if (req.status === 200) {\r\n      store.getData(localStorage.getItem(\"file\"));\r\n      store.getSchema();\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n      store.setTabNumber(0)\r\n    } else {\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"paper\">\r\n      <center>\r\n        <h1 className=\"title\">Delete a column</h1>\r\n        <Select\r\n          style={{ width: \"80%\" }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={col}\r\n          onChange={(e) => setCol(e.target.value)}\r\n        >\r\n          {Object.keys(store.data[0]).map((t) => (\r\n            <MenuItem value={t}>{t}</MenuItem>\r\n          ))}\r\n        </Select>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            // className=\"btn-danger\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={deleteC}\r\n            disabled={col === \"\"}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </center>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default DeleteColumn;\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\n\r\nfunction Add() {\r\n  const store = React.useContext(Context);\r\n  let record = { filename: localStorage.getItem(\"file\") };\r\n  for (let e of store.columns) {\r\n    record[e] = null;\r\n  }\r\n\r\n  const fill = (e, col) => {\r\n    if (store.schema[col] === \"IntegerType\" || store.schema[col] === \"LongType\")\r\n      record[col] = parseInt(e.target.value);\r\n    else if (\r\n      store.schema[col] === \"DoubleType\" ||\r\n      store.schema[col] === \"FloatType\"\r\n    )\r\n      record[col] = parseFloat(e.target.value) + 0.0;\r\n    else if (e.target.value === \"\") record[col] = null;\r\n    else if (store.schema[col] === \"TimestampType\") {\r\n      record[col] = e.target.value.replace(\"Z\", \"\").replace(\"T\", \" \");\r\n    } else record[col] = e.target.value;\r\n    console.log(record);\r\n  };\r\n  const addData = async () => {\r\n    let r = /[0-9]+-[0-9]+-[0-9]+[T* ][0-9]+:[0-9]+:[0-9]+Z*/;\r\n    const values = Object.values(record);\r\n    const keys = Object.keys(record);\r\n    console.log(values);\r\n    for (let i = 1; i < values.length; i++) {\r\n      if (\r\n        store.schema[keys[i]] === \"TimestampType\" &&\r\n        !r.test(values[i]) &&\r\n        values[i] != null\r\n      ) {\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title: keys[i] + \" : Timestamp format 'yyyy-mm-dd hh:mm:ss' \",\r\n        });\r\n      } else if (\r\n        isNaN(values[i]) &&\r\n        (store.schema[keys[i]] === \"DoubleType\" ||\r\n          store.schema[keys[i]] === \"IntegerType\")\r\n      ) {\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title:\r\n            keys[i] +\r\n            \": Make sure you add a numerical value to a numerical filed\",\r\n        });\r\n      } else if (store.schema[keys[i]].includes(\"Map\")) {\r\n        try {\r\n          record[keys[i]] = JSON.parse(record[keys[i]]);\r\n        } catch {\r\n          return Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Check if JSON data is in the right format\",\r\n          });\r\n        }\r\n      } else if (store.schema[keys[i]].includes(\"ArrayType(String\")) {\r\n        record[keys[i]] = record[keys[i]].split(\",\");\r\n      } else if (\r\n        store.schema[keys[i]].includes(\"ArrayType(Integer\") ||\r\n        store.schema[keys[i]].includes(\"ArrayType(Long\")\r\n      ) {\r\n        record[keys[i]] = record[keys[i]].split(\",\").map((e) => parseInt(e));\r\n      } else if (\r\n        store.schema[keys[i]].includes(\"ArrayType(Double\") ||\r\n        store.schema[keys[i]].includes(\"ArrayType(Float\")\r\n      ) {\r\n        record[keys[i]] = record[keys[i]]\r\n          .split(\",\")\r\n          .map((e) => parseFloat(e) + 0.0);\r\n      }\r\n    }\r\n    store.setLoading(true);\r\n    try {\r\n      const req = await fetch(HOST, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(record),\r\n      });\r\n      if (req.status === 200) {\r\n        const resp = await req.json();\r\n        if (resp[0].status === \"success\") {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: resp[0].message,\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n          });\r\n          store.getData(localStorage.getItem(\"file\"));\r\n          store.setTabNumber(0);\r\n        }\r\n      } else if (req.status === 400) {\r\n        const resp = await req.json();\r\n        if (resp[0].status === \"error\") {\r\n          Swal.fire({\r\n            icon: resp[0].status,\r\n            title: resp[0].message,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: e,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{ padding: \"0 100px\" }}>\r\n        {store.columns.map((col) => (\r\n          <Grid key={col} item md={4} style={{ marginTop: 15 }}>\r\n            <center>\r\n              <TextField\r\n                className=\"textfield1\"\r\n                label={col}\r\n                onChange={(e) => fill(e, col)}\r\n              />\r\n            </center>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <center style={{ marginTop: 50 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addData}>\r\n          Add\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\n\r\nfunction Update() {\r\n  const store = React.useContext(Context);\r\n  let keys = Object.keys(store.selected);\r\n  let values = Object.values(store.selected);\r\n  let updatedData = {};\r\n  let fields;\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (\r\n      JSON.stringify(values[i]).includes(\"{\") &&\r\n      typeof values[i] == \"object\"\r\n    ) {\r\n      values[i] = JSON.stringify(values[i]);\r\n      updatedData[keys[i]] = values[i];\r\n    } else updatedData[keys[i]] = values[i];\r\n  }\r\n  console.log(updatedData);\r\n  fields = document.getElementsByClassName(\"fields\");\r\n\r\n  React.useEffect(() => {\r\n    for (let i = 0; i < values.length; i++) {\r\n      fields[i].getElementsByTagName(\"input\")[0].value = values[i];\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [fields]);\r\n\r\n  const fill = (e, i, col) => {\r\n    if (store.schema[col] === \"IntegerType\" || store.schema[col] === \"LongType\")\r\n      updatedData[col] = parseInt(\r\n        fields[i].getElementsByTagName(\"input\")[0].value\r\n      );\r\n    else if (\r\n      store.schema[col] === \"DoubleType\" ||\r\n      store.schema[col] === \"FloatType\"\r\n    )\r\n      updatedData[col] =\r\n        parseFloat(fields[i].getElementsByTagName(\"input\")[0].value) + 0.0;\r\n    else if (fields[i].getElementsByTagName(\"input\")[0].value === \"\")\r\n      updatedData[col] = null;\r\n    else if (store.schema[col] === \"TimestampType\")\r\n      updatedData[col] = fields[i]\r\n        .getElementsByTagName(\"input\")[0]\r\n        .value.replace(\"T\", \" \")\r\n        .replace(\"Z\", \"\");\r\n    else updatedData[col] = fields[i].getElementsByTagName(\"input\")[0].value;\r\n    console.log(updatedData);\r\n  };\r\n\r\n  const updateData = async () => {\r\n    store.setLoading(true);\r\n    updatedData[\"filename\"] = localStorage.getItem(\"file\");\r\n\r\n    let newValues = [];\r\n    let newKeys = [];\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      if (values[i] === null || values[i] === undefined) {\r\n      } else {\r\n        try {\r\n          if (store.schema[keys[i]] === \"TimestampType\") {\r\n            let r = /[0-9]+-[0-9]+-[0-9]+[T* ][0-9]+:[0-9]+:[0-9]+Z*/;\r\n            if (!r.test(updatedData[keys[i]])) {\r\n              store.setLoading(false);\r\n              return Swal.fire({\r\n                icon: \"error\",\r\n                title: keys[i] + \" : Timestamp format 'yyyy-mm-dd hh:mm:ss' \",\r\n              });\r\n            }\r\n            // if (values[i])\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .replaceAll(\"T\", \" \")\r\n              .replaceAll(\"Z\", \"\");\r\n          } else if (\r\n            store.schema[keys[i]] === \"DoubleType\" ||\r\n            store.schema[keys[i]] === \"FloatType\"\r\n          ) {\r\n            updatedData[keys[i]] = parseFloat(updatedData[keys[i]]) + 0.0;\r\n          } else if (\r\n            store.schema[keys[i]] === \"IntegerType\" ||\r\n            store.schema[keys[i]] === \"LongType\"\r\n          ) {\r\n            updatedData[keys[i]] = parseInt(updatedData[keys[i]]);\r\n          } else if (\r\n            store.schema[keys[i]].includes(\"ArrayType(String\") &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = updatedData[keys[i]].split(\",\");\r\n          } else if (\r\n            (store.schema[keys[i]].includes(\"ArrayType(Integer\") ||\r\n              store.schema[keys[i]].includes(\"ArrayType(Long\")) &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            console.log(updatedData[keys[i]]);\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .split(\",\")\r\n              .map((e) => parseInt(e));\r\n          } else if (\r\n            (store.schema[keys[i]].includes(\"ArrayType(Double\") ||\r\n              store.schema[keys[i]].includes(\"ArrayType(Float\")) &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .split(\",\")\r\n              .map((e) => parseFloat(e));\r\n          } else if (\r\n            store.schema[keys[i]].includes(\"Map\") &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = JSON.parse(updatedData[keys[i]]);\r\n          }\r\n          if (\r\n            !store.schema[keys[i]].includes(\"Array\") &&\r\n            !store.schema[keys[i]].includes(\"Map\")\r\n          ) {\r\n            newValues.push(values[i] + \"\");\r\n            newKeys.push(keys[i] + \"\");\r\n          }\r\n          if (\r\n            isNaN(updatedData[keys[i]]) &&\r\n            (store.schema[keys[i]] === \"DoubleType\" ||\r\n              store.schema[keys[i]] === \"IntegerType\" ||\r\n              store.schema[keys[i]] === \"LongType\")\r\n          ) {\r\n            store.setLoading(false);\r\n            for (let i = 0; i < values.length; i++) {\r\n              fields[i].getElementsByTagName(\"input\")[0].value = values[i];\r\n            }\r\n            return Swal.fire({\r\n              icon: \"error\",\r\n              title:\r\n                keys[i] +\r\n                \": Make sure you add a numerical value to a numerical filed\",\r\n            });\r\n          }\r\n        } catch (e) {\r\n          store.setLoading(false);\r\n          return Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Check the format of JSON data\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n    updatedData[\"selector\"] = newKeys;\r\n    updatedData[\"selectorValue\"] = newValues;\r\n    const req = await fetch(HOST, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    });\r\n    const resp = await req.json();\r\n    store.setLoading(false);\r\n    Swal.fire({\r\n      icon: resp[0].status,\r\n      title: resp[0].message,\r\n      showConfirmButton: false,\r\n      timer: 2000,\r\n    });\r\n    store.getData(localStorage.getItem(\"file\"));\r\n    store.setTabNumber(0);\r\n    store.setSelected(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container style={{ padding: \"0 100px\" }}>\r\n        {keys.map((key, i) => (\r\n          <Grid key={i} item md={4} style={{ marginTop: 15 }}>\r\n            <center>\r\n              <TextField\r\n                className=\"fields\"\r\n                label={key}\r\n                onChange={(e) => {\r\n                  fill(e, i, key);\r\n                }}\r\n              />\r\n            </center>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <center style={{ marginTop: 50 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={updateData}>\r\n          Update\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Columns from \"../columns/Columns\";\r\nimport Schema from \"../schema/Schema\";\r\nimport AddColumn from \"../addcolumn/AddColumn\";\r\nimport DeleteColumn from \"../deletecolumn/DeleteColumn\";\r\nimport Add from \"../add/Add\";\r\nimport { Context } from \"../../App\";\r\nimport Update from \"../update/Update\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const store = React.useContext(Context);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // setValue(newValue);\r\n    store.setTabNumber(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    store.setTabNumber(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={store.tabNumber}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab disabled={!store.btnActive} label=\"Columns\" {...a11yProps(0)} />\r\n          <Tab disabled={!store.btnActive} label=\"Schema\" {...a11yProps(1)} />\r\n          <Tab disabled={!store.btnActive} label=\"Add\" {...a11yProps(2)} />\r\n          <Tab\r\n            disabled={!store.btnActive || store.disbaleUpdateBtn}\r\n            label=\"Update\"\r\n            {...a11yProps(3)}\r\n          />\r\n          <Tab\r\n            disabled={!store.btnActive}\r\n            label=\"Add Columns\"\r\n            {...a11yProps(4)}\r\n          />\r\n          <Tab\r\n            disabled={!store.btnActive}\r\n            label=\"Delete Columns\"\r\n            {...a11yProps(5)}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={store.tabNumber}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={store.tabNumber} index={0} dir={theme.direction}>\r\n          <Columns />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={1} dir={theme.direction}>\r\n          <Schema />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={2} dir={theme.direction}>\r\n          <Add />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={3} dir={theme.direction}>\r\n          <Update />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={4} dir={theme.direction}>\r\n          <AddColumn />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={5} dir={theme.direction}>\r\n          <DeleteColumn />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Appbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Parquet File Manager\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport \"./CRadio.css\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport { Context } from \"../../App\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function CRadio() {\r\n  const store = React.useContext(Context);\r\n  const [value, setValue] = useState(\"local\");\r\n  let inputfile = useRef(null);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    try {\r\n      store.setLoading(true);\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", e.target.files[0]);\r\n      const resp = await fetch(HOST + \"upload\", {\r\n        method: \"POST\",\r\n        body: formdata,\r\n      });\r\n      const returning = await resp.json();\r\n      localStorage.setItem(\"file\", returning.filename);\r\n      await store.getData(returning.filename);\r\n      await store.getSchema();\r\n      store.setName(e.target.files[0].name);\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"The file is uplaoded successfully\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } catch (e) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: e,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Grid className=\"wrapper\" container justifyContent=\"space-around\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={uploadFile}\r\n        ref={inputfile}\r\n        name=\"\"\r\n        id=\"\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <Grid item>\r\n        <FormControl component=\"fieldset\" disabled={store.btnActive}>\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"method\"\r\n            name=\"method\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"local\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Local\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"azure\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Azure\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        {value === \"local\" ? (\r\n          <Button\r\n            className=\"loadButton\"\r\n            variant=\"contained\"\r\n            disabled={store.btnActive}\r\n            color=\"primary\"\r\n            onClick={() => inputfile.current.click()}\r\n          >\r\n            Load File\r\n          </Button>\r\n        ) : (\r\n          <TextField\r\n            className=\"urlField\"\r\n            fullWidth\r\n            label=\"Url of the azure data lake file\"\r\n            variant=\"outlined\"\r\n            disabled={store.btnActive}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Appbar from \"../appbar/Appbar\";\r\nimport CRadio from \"../radio/CRadio\";\r\n\r\nfunction Global() {\r\n  return (\r\n    <div>\r\n      <Appbar />\r\n      <br />\r\n      <CRadio />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Global;\r\n","import { css } from \"@emotion/react\";\r\nimport ClipLoader from \"react-spinners/RingLoader\";\r\nimport \"./Spinner.css\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: blue;\r\n`;\r\n\r\nfunction Spinner({ loading }) {\r\n  return (\r\n    <div\r\n      className=\"spinner-wrapper\"\r\n      style={{ display: loading ? \"flex\" : \"none\" }}\r\n    >\r\n      <ClipLoader color={\"blue\"} loading={loading} css={override} size={150} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Global from \"./components/global/Global\";\r\nimport React from \"react\";\r\nimport { HOST } from \"./constants/constants\";\r\nimport Spinner from \"./components/spinner/Spinner\";\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nfunction App() {\r\n    const [data, setData] = React.useState([]);\r\n    const [schema, setSchema] = React.useState({});\r\n    const [columns, setColumns] = React.useState([]);\r\n    const [name, setName] = React.useState(\"No Data !\");\r\n    const [btnActive, setBtnActive] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [tabNumber, setTabNumber] = React.useState(0);\r\n    const [selected, setSelected] = React.useState(\"\");\r\n    const [disbaleUpdateBtn, setDisabledUpdatedBtn] = React.useState(true);\r\n\r\n    const getData = async (filename) => {\r\n        const resp2 = await fetch(HOST + \"all\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                filename,\r\n            }),\r\n        });\r\n        const returnedData = await resp2.json();\r\n        setData(returnedData);\r\n        console.log(returnedData);\r\n        if (returnedData.length === 0) return alert(\"all data are deleted\");\r\n        setColumns(Object.keys(returnedData[0]));\r\n        setBtnActive(true);\r\n    };\r\n\r\n    const getSchema = async () => {\r\n        const resp = await fetch(HOST + \"schema\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                filename: localStorage.getItem(\"file\"),\r\n            }),\r\n        });\r\n        const schema = await resp.json();\r\n        store.setSchema(schema);\r\n    };\r\n\r\n    const store = {\r\n        data,\r\n        setData,\r\n        schema,\r\n        setSchema,\r\n        setColumns,\r\n        columns,\r\n        name,\r\n        setName,\r\n        btnActive,\r\n        setBtnActive,\r\n        getData,\r\n        getSchema,\r\n        setLoading,\r\n        tabNumber,\r\n        setTabNumber,\r\n        selected,\r\n        setSelected,\r\n        disbaleUpdateBtn,\r\n        setDisabledUpdatedBtn,\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={store}>\r\n            <Spinner loading={loading} />\r\n            <Global />\r\n            <Home />\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}