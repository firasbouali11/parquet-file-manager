{"version":3,"sources":["constants/constants.js","components/custom-search/CustomSearch.jsx","components/modal/CModal.jsx","pages/columns/Columns.jsx","pages/schema/Schema.jsx","pages/addcolumn/AddColumn.jsx","pages/deletecolumn/DeleteColumn.jsx","pages/add/Add.jsx","pages/update/Update.jsx","pages/home/Home.jsx","components/appbar/Appbar.jsx","components/radio/CRadio.jsx","components/global/Global.jsx","components/spinner/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["HOST","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","searchKeys","CustomSearch","panel","classes","React","useState","expanded","setExpanded","store","useContext","Context","getSpecificData","a","setLoading","keys","Object","values","i","length","console","log","fetch","method","headers","body","JSON","stringify","filename","localStorage","getItem","selector","selectorValue","req","json","resp","Swal","fire","position","icon","title","showConfirmButton","timer","status","message","setData","reset","document","querySelectorAll","value","className","Accordion","onChange","event","isExpanded","AccordionSummary","expandIcon","id","Typography","AccordionDetails","Grid","container","columns","map","col","item","md","TextField","label","e","target","style","display","justifyContent","alignItems","marginTop","marginBottom","Button","variant","btnActive","onClick","modal","margin","paper","backgroundColor","background","border","boxShadow","shadows","padding","spacing","maxHeight","maxWidth","table","CModal","open","setOpen","data","deleteData","handleClose","parse","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","row","align","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","type","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","name","getData","selected","downloadParquetFile","setTabNumber","sendSelected","saveToADL","Toolbar","clsx","marginLeft","Tooltip","IconButton","disabled","minWidth","clip","height","overflow","top","Columns","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","history","useHistory","adlfilepath","url","setBtnActive","setColumns","setName","jsonString","allKeys","allValues","undefined","schema","includes","push","many","blob","csvURL","window","URL","createObjectURL","tempLink","createElement","href","setAttribute","click","deleteManyData","responses","size","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","key","toString","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","tableWrapper","Schema","scope","formControl","selectEmpty","AddColumn","setCol","setType","defaultValue","setDefaultValue","arrayType","setArrayType","appear","setAppear","addC","converted","parseFloat","toLowerCase","split","isNaN","default","valueType","getSchema","elevation","FormControl","InputLabel","Select","t","MenuItem","DeleteColumn","deleteC","showDenyButton","showCancelButton","confirmButtonText","then","result","isConfirmed","Add","record","addData","r","test","replace","fill","Update","fields","updatedData","getElementsByClassName","useEffect","getElementsByTagName","updateData","newValues","newKeys","replaceAll","TabPanel","children","other","hidden","Box","p","a11yProps","Home","useTheme","AppBar","Tabs","tabNumber","newValue","indicatorColor","textColor","Tab","disbaleUpdateBtn","axis","onChangeIndex","dir","flexGrow","menuButton","marginRight","Appbar","edge","CRadio","setValue","inputfile","useRef","readFromDataLake","setItem","uploadFile","formdata","FormData","append","files","returning","ref","RadioGroup","Radio","current","fullWidth","setContainer","setUrl","Global","override","css","Spinner","loading","createContext","App","setSchema","setDisabledUpdatedBtn","resp2","returnedData","alert","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9f2009e3.chunk.js","sourcesContent":["const HOSTIP = \"localhost\";\r\nconst HOSTPORT = \"5050\";\r\nconst production = false\r\nlet HOST = \"\"\r\nif(production)  HOST = `/api/`; \r\nelse HOST = `http://${HOSTIP}:${HOSTPORT}/parqfile/`;\r\n \r\nexport {HOST}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport Swal from \"sweetalert2\";\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nlet searchKeys = {};\r\n\r\nexport default function CustomSearch() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const store = React.useContext(Context);\r\n\r\n  const getSpecificData = async () => {\r\n    store.setLoading(true);\r\n    let keys = Object.keys(searchKeys);\r\n    let values = Object.values(searchKeys);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (values[i] === \"\") delete searchKeys[keys[i]];\r\n    }\r\n    console.log(searchKeys);\r\n    const req = await fetch(HOST + \"one\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: Object.keys(searchKeys),\r\n        selectorValue: Object.values(searchKeys),\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    if (resp.length === 0) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"warning\",\r\n        title: \"there is no data\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } else if (resp[0].status === \"error\") {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } else if (resp.length > 0) {\r\n      await store.setData(resp);\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Here is your data !\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    searchKeys = {};\r\n    const reset = document.querySelectorAll(\".textfield1 input\");\r\n    for (let e of reset) e.value = null;\r\n    store.setLoading(false);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>Custom Search</Typography>\r\n          {/* <SearchIcon /> */}\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container>\r\n            {store.columns.map((col) => (\r\n              <Grid key={col} item md={3}>\r\n                <center>\r\n                  <TextField\r\n                    className=\"textfield1\"\r\n                    label={col}\r\n                    onChange={(e) => {\r\n                      searchKeys[col] = e.target.value;\r\n                    }}\r\n                  />\r\n                </center>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </AccordionDetails>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 30,\r\n            marginBottom: 30,\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              display: store.btnActive ? \"block\" : \"none\",\r\n            }}\r\n            onClick={getSpecificData}\r\n          >\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n      <br />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"0 10%\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxHeight: 800,\r\n    maxWidth: \"80%\",\r\n  },\r\n  table: {\r\n    maxHeight: 600,\r\n    maxWidth: 300,\r\n  },\r\n}));\r\n\r\nexport default function CModal({ open, setOpen, data, deleteData }) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const columns = Object.keys(JSON.parse(data[0]));\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h1 id=\"transition-modal-title\">\r\n              You have {data.length} records to remove! are you sure ?\r\n            </h1>\r\n            <TableContainer style={{ maxHeight: 600 }} component={Paper}>\r\n              <Table\r\n                stickyHeader\r\n                className={classes.table}\r\n                aria-label=\"simple table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((col) => (\r\n                      <TableCell>{col}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.map((row, i) => (\r\n                    <TableRow key={i}>\r\n                      {columns.map((col) => (\r\n                        <TableCell align=\"right\">\r\n                          {JSON.parse(row)[col]}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <center>\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  handleClose();\r\n                  deleteData();\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </center>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport CustomSearch from \"../../components/custom-search/CustomSearch\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Swal from \"sweetalert2\";\r\nimport CModal from \"../../components/modal/CModal\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    columns,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell}\r\n            align=\"left\"\r\n            padding={headCell ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell}\r\n              direction={orderBy === headCell ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell)}\r\n            >\r\n              {headCell}\r\n              {orderBy === headCell ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    name,\r\n    setOpen,\r\n    getData,\r\n    selected,\r\n    btnActive,\r\n    downloadParquetFile,\r\n    setTabNumber,\r\n    sendSelected,\r\n    saveToADL,\r\n  } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {name}\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              marginLeft: 45,\r\n              display: btnActive ? \"\" : \"none\",\r\n            }}\r\n            onClick={() => getData(localStorage.getItem(\"file\"))}\r\n          >\r\n            <CachedIcon />\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ display: btnActive ? \"\" : \"none\", marginLeft: 30 }}\r\n            onClick={downloadParquetFile}\r\n          >\r\n            Download\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ display: btnActive ? \"\" : \"none\", marginLeft: 30 }}\r\n            onClick={saveToADL}\r\n          >\r\n            Save to ADL\r\n          </Button>\r\n        </Typography>\r\n      )}\r\n\r\n      {\r\n        <>\r\n          <Tooltip title=\"update\">\r\n            <IconButton disabled={numSelected !== 1}>\r\n              <CreateIcon\r\n                onClick={() => {\r\n                  setTabNumber(3);\r\n                  sendSelected(JSON.parse(selected[0]));\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"delete\" disabled={numSelected === 0}>\r\n              <DeleteIcon onClick={() => setOpen(true)} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n        // <Tooltip title=\"Filter list\">\r\n        //   <IconButton aria-label=\"filter list\">\r\n        //     <FilterListIcon />\r\n        //   </IconButton>\r\n        // </Tooltip>\r\n      }\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Columns() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  const store = React.useContext(Context);\r\n\r\n  const saveToADL = async () => {\r\n    store.setLoading(true);\r\n\r\n    try {\r\n      const req = await fetch(HOST + \"dl/save\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          filename: localStorage.getItem(\"file\"),\r\n          container: store.container,\r\n          adlfilepath: store.url,\r\n        }),\r\n      });\r\n      const resp = await req.json();\r\n      console.log(resp);\r\n      if (resp.status === \"success\") {\r\n        Swal.fire({\r\n          icon: resp.status,\r\n          title: resp.message,\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n        });\r\n      } else {\r\n        store.setLoading(false);\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title: \"You can't save to the data lake ! Check for errors !\",\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n        });\r\n      }\r\n      store.setData([]);\r\n      store.setBtnActive(false);\r\n      store.setColumns([]);\r\n      store.setName(\"No Data !\");\r\n    } catch (e) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: e,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n\r\n    store.setLoading(false);\r\n  };\r\n  const deleteData = async (jsonString) => {\r\n    let resp;\r\n    let data = JSON.parse(jsonString);\r\n    let keys = [];\r\n    let values = [];\r\n    let allKeys = Object.keys(data);\r\n    let allValues = Object.values(data);\r\n    for (let i = 0; i < allKeys.length; i++) {\r\n      if (allValues[i] === null || allValues[i] === undefined)\r\n        console.log(\"ok\");\r\n      else {\r\n        if (store.schema[allKeys[i]].includes(\"Array\") === false) {\r\n          keys.push(allKeys[i] + \"\");\r\n          values.push(allValues[i] + \"\");\r\n          console.log(keys[i] + \":\" + values[i]);\r\n        }\r\n      }\r\n    }\r\n    console.log(\r\n      JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: keys,\r\n        selectorValue: values,\r\n        many: false,\r\n      })\r\n    );\r\n    let req = await fetch(HOST, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        selector: keys,\r\n        selectorValue: values,\r\n        many: false,\r\n      }),\r\n    });\r\n    resp = await req.json();\r\n    return resp;\r\n  };\r\n\r\n  const downloadParquetFile = async () => {\r\n    store.setLoading(true);\r\n    const req = await fetch(HOST + \"download\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n      }),\r\n    });\r\n\r\n    const resp = await req.blob();\r\n    console.log(resp);\r\n    var csvURL = window.URL.createObjectURL(resp);\r\n    let tempLink = document.createElement(\"a\");\r\n    tempLink.href = csvURL;\r\n    tempLink.setAttribute(\"download\", \"result.zip\");\r\n    tempLink.click();\r\n\r\n    await fetch(HOST + \"clean\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n      }),\r\n    });\r\n    store.setData([]);\r\n    store.setBtnActive(false);\r\n    store.setColumns([]);\r\n    store.setName(\"No Data !\");\r\n    store.setLoading(false);\r\n  };\r\n\r\n  const deleteManyData = async () => {\r\n    let responses = [];\r\n    store.setLoading(true);\r\n    for (let row of selected) {\r\n      let resp = await deleteData(row);\r\n      responses.push(resp);\r\n    }\r\n    for (let resp of responses) {\r\n      if (resp[0].status !== \"success\") {\r\n        Swal.fire({\r\n          icon: resp[0].status,\r\n          title: resp[0].message,\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    Swal.fire({\r\n      icon: responses[0][0].status,\r\n      title: responses[0][0].message,\r\n      showConfirmButton: false,\r\n      timer: 2000,\r\n    });\r\n    setSelected([]);\r\n    store.getData(localStorage.getItem(\"file\"));\r\n    store.setLoading(false);\r\n  };\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = store.data.map((n) => JSON.stringify(n));\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CustomSearch />\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          name={store.name}\r\n          selected={selected}\r\n          setOpen={setOpen}\r\n          getData={store.getData}\r\n          history={history}\r\n          btnActive={store.btnActive}\r\n          downloadParquetFile={downloadParquetFile}\r\n          setTabNumber={store.setTabNumber}\r\n          sendSelected={store.setSelected}\r\n          saveToADL={saveToADL}\r\n        />\r\n        <TableContainer style={{ maxHeight: 500 }}>\r\n          <Table\r\n            stickyHeader\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={store.data.length}\r\n              columns={store.columns}\r\n            />\r\n            <TableBody>\r\n              {stableSort(store.data, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(JSON.stringify(row));\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) =>\r\n                        handleClick(event, JSON.stringify(row))\r\n                      }\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          color=\"primary\"\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      {Object.keys(store.data[0]).map((key, i) => (\r\n                        <TableCell key={i} align=\"left\">\r\n                          {typeof row[key] == \"object\"\r\n                            ? JSON.stringify(row[key])\r\n                            : row[key].toString()}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={store.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={dense}\r\n            onChange={handleChangeDense}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n      {open && (\r\n        <CModal\r\n          open={open}\r\n          setOpen={setOpen}\r\n          data={selected}\r\n          deleteData={deleteManyData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Context } from \"../../App\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"100%\",\r\n  },\r\n  tableWrapper: {\r\n    width: \"50%\",\r\n    margin: \"20px auto\",\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function Schema() {\r\n  const classes = useStyles();\r\n  const store = React.useContext(Context);\r\n\r\n  return (\r\n    <TableContainer className={classes.tableWrapper} component={Paper}>\r\n      <Table stickyHeader className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Columns</TableCell>\r\n            <TableCell align=\"center\">Types</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.keys(store.schema).map((row, i) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {Object.values(store.schema)[i]}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./AddColumn.css\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport { Context } from \"../../App\";\r\nimport Swal from \"sweetalert2\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction AddColumn() {\r\n  const types = [\"Integer\", \"Double\", \"String\", \"Array\", \"Boolean\"];\r\n  const arraytypes = [\"Integer\", \"Double\", \"String\", \"Boolean\"];\r\n  const classes = useStyles();\r\n  const [col, setCol] = React.useState(\"\");\r\n  const [type, setType] = React.useState(\"\");\r\n  const [defaultValue, setDefaultValue] = React.useState(\"\");\r\n  const [arrayType, setArrayType] = React.useState(\"\");\r\n  const [appear, setAppear] = React.useState(false);\r\n  const store = React.useContext(Context);\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n    if (event.target.value === \"Array\") setAppear(true);\r\n    else setAppear(false);\r\n  };\r\n\r\n  const typeConverter = (value) => {\r\n    if (type === \"Integer\") return parseInt(value);\r\n    else if (type === \"Double\") return parseFloat(value);\r\n    else if (type === \"Boolean\") {\r\n      if (value.toLowerCase() === \"false\") return false;\r\n      else if (value.toLowerCase() === \"true\") return true;\r\n      else return \"not a boolean\";\r\n    } else if (type === \"Array\") {\r\n      if (arrayType === \"Integer\")\r\n        return value.split(\",\").map((e) => parseInt(e));\r\n      else if (arrayType === \"Double\")\r\n        return value.split(\",\").map((e) => parseFloat(e));\r\n      else if (arrayType === \"Boolean\") {\r\n        if (value.toLowerCase() === \"false\")\r\n          return value.split(\",\").map((e) => false);\r\n        else if (value.toLowerCase() === \"true\")\r\n          return value.split(\",\").map((e) => false);\r\n        else return \"not a boolean\";\r\n      } else return value.split(\",\");\r\n    } else return value;\r\n  };\r\n\r\n  const addC = async () => {\r\n    store.setLoading(true);\r\n    const converted = typeConverter(defaultValue);\r\n    if (converted === \"not a boolean\") {\r\n      store.setLoading(false);\r\n\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Boolean values should be 'true' or 'false'\",\r\n      });\r\n    } else if (isNaN(converted) && type !== \"Array\" && type !== \"String\") {\r\n      store.setLoading(false);\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Make sure you add a numerical value to the default value\",\r\n      });\r\n    }\r\n    const req = await fetch(HOST + \"col\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        filename: localStorage.getItem(\"file\"),\r\n        col,\r\n        default: converted,\r\n        valueType: arrayType,\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    if (req.status === 200) {\r\n      store.getData(localStorage.getItem(\"file\"));\r\n      store.getSchema();\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n      store.setTabNumber(0)\r\n    } else {\r\n      Swal.fire({\r\n        icon: resp[0].status,\r\n        title: resp[0].message,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"paper\">\r\n      <center>\r\n        <h1 className=\"title\">Add a column</h1>\r\n        <div className=\"holder\">\r\n          <TextField\r\n            className=\"textfield\"\r\n            id=\"colnameadd\"\r\n            label=\"Column Name\"\r\n            value={col}\r\n            onChange={(e) => setCol(e.target.value)}\r\n          />\r\n          <br />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={type}\r\n              onChange={handleChange}\r\n            >\r\n              {types.map((t) => (\r\n                <MenuItem value={t}>{t}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            className={classes.formControl}\r\n            style={{\r\n              display: appear === true ? \"flex\" : \"none\",\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-label\">Array Type</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={arrayType}\r\n              onChange={(e) => setArrayType(e.target.value)}\r\n            >\r\n              {arraytypes.map((t) => (\r\n                <MenuItem value={t}>{t}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            className=\"textfield\"\r\n            id=\"defaultval\"\r\n            label=\"Default value\"\r\n            value={defaultValue}\r\n            onChange={(e) => setDefaultValue(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            // className=\"btn\"\r\n            style={{ marginLeft: 30 }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={addC}\r\n            disabled={type === \"\"}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </center>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AddColumn;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./DeleteColumn.css\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction DeleteColumn() {\r\n  const [col, setCol] = React.useState(\"\");\r\n  const store = React.useContext(Context);\r\n\r\n  const deleteC = async () => {\r\n    Swal.fire({\r\n      title: `Do you confirm the deletion of the column ${col} ?`,\r\n      showDenyButton: false,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Delete`,\r\n    }).then(async (result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        store.setLoading(true);\r\n        const req = await fetch(HOST + \"col\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            filename: localStorage.getItem(\"file\"),\r\n            col,\r\n          }),\r\n        });\r\n        const resp = await req.json();\r\n        if (req.status === 200) {\r\n          store.getData(localStorage.getItem(\"file\"));\r\n          store.getSchema();\r\n          Swal.fire({\r\n            icon: resp[0].status,\r\n            title: resp[0].message,\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n          });\r\n          store.setTabNumber(0);\r\n        } else {\r\n          Swal.fire({\r\n            icon: resp[0].status,\r\n            title: resp[0].message,\r\n          });\r\n        }\r\n        store.setLoading(false);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"paper\">\r\n      <center>\r\n        <h1 className=\"title\">Delete a column</h1>\r\n        <Select\r\n          style={{ width: \"80%\" }}\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={col}\r\n          onChange={(e) => setCol(e.target.value)}\r\n        >\r\n          {Object.keys(store.data[0]).map((t) => (\r\n            <MenuItem value={t}>{t}</MenuItem>\r\n          ))}\r\n        </Select>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            // className=\"btn-danger\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={deleteC}\r\n            disabled={col === \"\"}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </center>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default DeleteColumn;\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\n\r\nfunction Add() {\r\n  const store = React.useContext(Context);\r\n  let record = { filename: localStorage.getItem(\"file\") };\r\n  for (let e of store.columns) {\r\n    record[e] = null;\r\n  }\r\n\r\n  const fill = (e, col) => {\r\n    if (store.schema[col] === \"IntegerType\" || store.schema[col] === \"LongType\")\r\n      record[col] = parseInt(e.target.value);\r\n    else if (\r\n      store.schema[col] === \"DoubleType\" ||\r\n      store.schema[col] === \"FloatType\"\r\n    )\r\n      record[col] = parseFloat(e.target.value) + 0.0;\r\n    else if (e.target.value === \"\") record[col] = null;\r\n    else if (store.schema[col] === \"TimestampType\") {\r\n      record[col] = e.target.value.replace(\"Z\", \"\").replace(\"T\", \" \");\r\n    } else record[col] = e.target.value;\r\n    console.log(record);\r\n  };\r\n  const addData = async () => {\r\n    let r = /[0-9]+-[0-9]+-[0-9]+[T* ][0-9]+:[0-9]+:[0-9]+Z*/;\r\n    const values = Object.values(record);\r\n    const keys = Object.keys(record);\r\n    console.log(values);\r\n    for (let i = 1; i < values.length; i++) {\r\n      if (\r\n        store.schema[keys[i]] === \"TimestampType\" &&\r\n        !r.test(values[i]) &&\r\n        values[i] != null\r\n      ) {\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title: keys[i] + \" : Timestamp format 'yyyy-mm-dd hh:mm:ss' \",\r\n        });\r\n      } else if (\r\n        isNaN(values[i]) &&\r\n        (store.schema[keys[i]] === \"DoubleType\" ||\r\n          store.schema[keys[i]] === \"IntegerType\")\r\n      ) {\r\n        return Swal.fire({\r\n          icon: \"error\",\r\n          title:\r\n            keys[i] +\r\n            \": Make sure you add a numerical value to a numerical filed\",\r\n        });\r\n      } else if (store.schema[keys[i]].includes(\"Map\")) {\r\n        try {\r\n          record[keys[i]] = JSON.parse(record[keys[i]]);\r\n        } catch {\r\n          return Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Check if JSON data is in the right format\",\r\n          });\r\n        }\r\n      } else if (store.schema[keys[i]].includes(\"ArrayType(String\")) {\r\n        record[keys[i]] = record[keys[i]].split(\",\");\r\n      } else if (\r\n        store.schema[keys[i]].includes(\"ArrayType(Integer\") ||\r\n        store.schema[keys[i]].includes(\"ArrayType(Long\")\r\n      ) {\r\n        record[keys[i]] = record[keys[i]].split(\",\").map((e) => parseInt(e));\r\n      } else if (\r\n        store.schema[keys[i]].includes(\"ArrayType(Double\") ||\r\n        store.schema[keys[i]].includes(\"ArrayType(Float\")\r\n      ) {\r\n        record[keys[i]] = record[keys[i]]\r\n          .split(\",\")\r\n          .map((e) => parseFloat(e) + 0.0);\r\n      }\r\n    }\r\n    store.setLoading(true);\r\n    try {\r\n      const req = await fetch(HOST, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(record),\r\n      });\r\n      if (req.status === 200) {\r\n        const resp = await req.json();\r\n        if (resp[0].status === \"success\") {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: resp[0].message,\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n          });\r\n          store.getData(localStorage.getItem(\"file\"));\r\n          store.setTabNumber(0);\r\n        }\r\n      } else if (req.status === 400) {\r\n        const resp = await req.json();\r\n        if (resp[0].status === \"error\") {\r\n          Swal.fire({\r\n            icon: resp[0].status,\r\n            title: resp[0].message,\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: e,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={{ padding: \"0 100px\" }}>\r\n        {store.columns.map((col) => (\r\n          <Grid key={col} item md={4} style={{ marginTop: 15 }}>\r\n            <center>\r\n              <TextField\r\n                className=\"textfield1\"\r\n                label={col}\r\n                onChange={(e) => fill(e, col)}\r\n              />\r\n            </center>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <center style={{ marginTop: 50 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addData}>\r\n          Add\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Context } from \"../../App\";\r\nimport { HOST } from \"../../constants/constants\";\r\n\r\nfunction Update() {\r\n  const store = React.useContext(Context);\r\n  let keys = Object.keys(store.selected);\r\n  let values = Object.values(store.selected);\r\n  let updatedData = {};\r\n  let fields;\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (\r\n      JSON.stringify(values[i]).includes(\"{\") &&\r\n      typeof values[i] == \"object\"\r\n    ) {\r\n      values[i] = JSON.stringify(values[i]);\r\n      updatedData[keys[i]] = values[i];\r\n    } else updatedData[keys[i]] = values[i];\r\n  }\r\n  console.log(updatedData);\r\n  fields = document.getElementsByClassName(\"fields\");\r\n\r\n  React.useEffect(() => {\r\n    for (let i = 0; i < values.length; i++) {\r\n      fields[i].getElementsByTagName(\"input\")[0].value = values[i];\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [fields]);\r\n\r\n  const fill = (e, i, col) => {\r\n    if (store.schema[col] === \"IntegerType\" || store.schema[col] === \"LongType\")\r\n      updatedData[col] = parseInt(\r\n        fields[i].getElementsByTagName(\"input\")[0].value\r\n      );\r\n    else if (\r\n      store.schema[col] === \"DoubleType\" ||\r\n      store.schema[col] === \"FloatType\"\r\n    )\r\n      updatedData[col] =\r\n        parseFloat(fields[i].getElementsByTagName(\"input\")[0].value) + 0.0;\r\n    else if (fields[i].getElementsByTagName(\"input\")[0].value === \"\")\r\n      updatedData[col] = null;\r\n    else if (store.schema[col] === \"TimestampType\")\r\n      updatedData[col] = fields[i]\r\n        .getElementsByTagName(\"input\")[0]\r\n        .value.replace(\"T\", \" \")\r\n        .replace(\"Z\", \"\");\r\n    else updatedData[col] = fields[i].getElementsByTagName(\"input\")[0].value;\r\n    console.log(updatedData);\r\n  };\r\n\r\n  const updateData = async () => {\r\n    store.setLoading(true);\r\n    updatedData[\"filename\"] = localStorage.getItem(\"file\");\r\n\r\n    let newValues = [];\r\n    let newKeys = [];\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      if (values[i] === null || values[i] === undefined) {\r\n      } else {\r\n        try {\r\n          if (store.schema[keys[i]] === \"TimestampType\") {\r\n            let r = /[0-9]+-[0-9]+-[0-9]+[T* ][0-9]+:[0-9]+:[0-9]+Z*/;\r\n            if (!r.test(updatedData[keys[i]])) {\r\n              store.setLoading(false);\r\n              return Swal.fire({\r\n                icon: \"error\",\r\n                title: keys[i] + \" : Timestamp format 'yyyy-mm-dd hh:mm:ss' \",\r\n              });\r\n            }\r\n            // if (values[i])\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .replaceAll(\"T\", \" \")\r\n              .replaceAll(\"Z\", \"\");\r\n          } else if (\r\n            store.schema[keys[i]] === \"DoubleType\" ||\r\n            store.schema[keys[i]] === \"FloatType\"\r\n          ) {\r\n            updatedData[keys[i]] = parseFloat(updatedData[keys[i]]) + 0.0;\r\n          } else if (\r\n            store.schema[keys[i]] === \"IntegerType\" ||\r\n            store.schema[keys[i]] === \"LongType\"\r\n          ) {\r\n            updatedData[keys[i]] = parseInt(updatedData[keys[i]]);\r\n          } else if (\r\n            store.schema[keys[i]].includes(\"ArrayType(String\") &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = updatedData[keys[i]].split(\",\");\r\n          } else if (\r\n            (store.schema[keys[i]].includes(\"ArrayType(Integer\") ||\r\n              store.schema[keys[i]].includes(\"ArrayType(Long\")) &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            console.log(updatedData[keys[i]]);\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .split(\",\")\r\n              .map((e) => parseInt(e));\r\n          } else if (\r\n            (store.schema[keys[i]].includes(\"ArrayType(Double\") ||\r\n              store.schema[keys[i]].includes(\"ArrayType(Float\")) &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = updatedData[keys[i]]\r\n              .split(\",\")\r\n              .map((e) => parseFloat(e));\r\n          } else if (\r\n            store.schema[keys[i]].includes(\"Map\") &&\r\n            typeof updatedData[keys[i]] !== \"object\"\r\n          ) {\r\n            updatedData[keys[i]] = JSON.parse(updatedData[keys[i]]);\r\n          }\r\n          if (\r\n            !store.schema[keys[i]].includes(\"Array\") &&\r\n            !store.schema[keys[i]].includes(\"Map\")\r\n          ) {\r\n            newValues.push(values[i] + \"\");\r\n            newKeys.push(keys[i] + \"\");\r\n          }\r\n          if (\r\n            isNaN(updatedData[keys[i]]) &&\r\n            (store.schema[keys[i]] === \"DoubleType\" ||\r\n              store.schema[keys[i]] === \"IntegerType\" ||\r\n              store.schema[keys[i]] === \"LongType\")\r\n          ) {\r\n            store.setLoading(false);\r\n            for (let i = 0; i < values.length; i++) {\r\n              fields[i].getElementsByTagName(\"input\")[0].value = values[i];\r\n            }\r\n            return Swal.fire({\r\n              icon: \"error\",\r\n              title:\r\n                keys[i] +\r\n                \": Make sure you add a numerical value to a numerical filed\",\r\n            });\r\n          }\r\n        } catch (e) {\r\n          store.setLoading(false);\r\n          return Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Check the format of JSON data\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n    updatedData[\"selector\"] = newKeys;\r\n    updatedData[\"selectorValue\"] = newValues;\r\n    const req = await fetch(HOST, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    });\r\n    const resp = await req.json();\r\n    store.setLoading(false);\r\n    Swal.fire({\r\n      icon: resp[0].status,\r\n      title: resp[0].message,\r\n      showConfirmButton: false,\r\n      timer: 2000,\r\n    });\r\n    store.getData(localStorage.getItem(\"file\"));\r\n    store.setTabNumber(0);\r\n    store.setSelected(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container style={{ padding: \"0 100px\" }}>\r\n        {keys.map((key, i) => (\r\n          <Grid key={i} item md={4} style={{ marginTop: 15 }}>\r\n            <center>\r\n              <TextField\r\n                className=\"fields\"\r\n                label={key}\r\n                onChange={(e) => {\r\n                  fill(e, i, key);\r\n                }}\r\n              />\r\n            </center>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <center style={{ marginTop: 50 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={updateData}>\r\n          Update\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Columns from \"../columns/Columns\";\r\nimport Schema from \"../schema/Schema\";\r\nimport AddColumn from \"../addcolumn/AddColumn\";\r\nimport DeleteColumn from \"../deletecolumn/DeleteColumn\";\r\nimport Add from \"../add/Add\";\r\nimport { Context } from \"../../App\";\r\nimport Update from \"../update/Update\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const store = React.useContext(Context);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    // setValue(newValue);\r\n    store.setTabNumber(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    store.setTabNumber(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={store.tabNumber}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab disabled={!store.btnActive} label=\"Columns\" {...a11yProps(0)} />\r\n          <Tab disabled={!store.btnActive} label=\"Schema\" {...a11yProps(1)} />\r\n          <Tab disabled={!store.btnActive} label=\"Add\" {...a11yProps(2)} />\r\n          <Tab\r\n            disabled={!store.btnActive || store.disbaleUpdateBtn}\r\n            label=\"Update\"\r\n            {...a11yProps(3)}\r\n          />\r\n          <Tab\r\n            disabled={!store.btnActive}\r\n            label=\"Add Columns\"\r\n            {...a11yProps(4)}\r\n          />\r\n          <Tab\r\n            disabled={!store.btnActive}\r\n            label=\"Delete Columns\"\r\n            {...a11yProps(5)}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={store.tabNumber}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={store.tabNumber} index={0} dir={theme.direction}>\r\n          <Columns />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={1} dir={theme.direction}>\r\n          <Schema />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={2} dir={theme.direction}>\r\n          <Add />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={3} dir={theme.direction}>\r\n          <Update />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={4} dir={theme.direction}>\r\n          <AddColumn />\r\n        </TabPanel>\r\n        <TabPanel value={store.tabNumber} index={5} dir={theme.direction}>\r\n          <DeleteColumn />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Appbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Parquet File Manager\r\n          </Typography>\r\n          <IconButton\r\n            edge=\"end\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport \"./CRadio.css\";\r\nimport { HOST } from \"../../constants/constants\";\r\nimport { Context } from \"../../App\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function CRadio() {\r\n  const store = React.useContext(Context);\r\n  const [value, setValue] = useState(\"local\");\r\n\r\n  let inputfile = useRef(null);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const readFromDataLake = async () => {\r\n    store.setLoading(true);\r\n    const req = await fetch(HOST + \"dl\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        container: store.container,\r\n        adlfilepath: store.url,\r\n      }),\r\n    });\r\n    const resp = await req.json();\r\n    console.log(resp);\r\n    if (resp.status !== \"error\" && req.status === 200) {\r\n      localStorage.setItem(\"file\", resp.filename);\r\n      // store.setContainer(req.container);\r\n      // store.setUrl(resp.adlfilepath);\r\n      await store.setData(resp.data);\r\n      await store.getSchema();\r\n      store.setColumns(Object.keys(resp.data[0]));\r\n      store.setBtnActive(true);\r\n      store.setName(\"Data from datalake\");\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Data fetched successfully from the Datalake\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: resp.status,\r\n        title: resp.message,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    try {\r\n      store.setLoading(true);\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", e.target.files[0]);\r\n      const resp = await fetch(HOST + \"upload\", {\r\n        method: \"POST\",\r\n        body: formdata,\r\n      });\r\n      const returning = await resp.json();\r\n      localStorage.setItem(\"file\", returning.filename);\r\n      await store.getData(returning.filename);\r\n      await store.getSchema();\r\n      store.setName(e.target.files[0].name);\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"The file is uplaoded successfully\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    } catch (e) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: e,\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    store.setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Grid className=\"wrapper\" container justifyContent=\"space-around\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={uploadFile}\r\n        ref={inputfile}\r\n        name=\"\"\r\n        id=\"\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <Grid item>\r\n        <FormControl component=\"fieldset\" disabled={store.btnActive}>\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"method\"\r\n            name=\"method\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"local\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Local\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"azure\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Azure\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        {value === \"local\" ? (\r\n          <Button\r\n            className=\"loadButton\"\r\n            variant=\"contained\"\r\n            disabled={store.btnActive}\r\n            color=\"primary\"\r\n            onClick={() => inputfile.current.click()}\r\n          >\r\n            Load File\r\n          </Button>\r\n        ) : (\r\n          <div style={{ display: \"flex\" }}>\r\n            <TextField\r\n              className=\"urlField\"\r\n              fullWidth\r\n              label=\"Container of the datalake\"\r\n              variant=\"outlined\"\r\n              disabled={store.btnActive}\r\n              value={store.container}\r\n              onChange={(e) => store.setContainer(e.target.value)}\r\n            />\r\n            <TextField\r\n              className=\"urlField\"\r\n              fullWidth\r\n              label=\"Url of the azure datalake file\"\r\n              variant=\"outlined\"\r\n              value={store.url}\r\n              disabled={store.btnActive}\r\n              onChange={(e) => store.setUrl(e.target.value)}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={readFromDataLake}\r\n              disabled={store.btnActive}\r\n            >\r\n              Read\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Appbar from \"../appbar/Appbar\";\r\nimport CRadio from \"../radio/CRadio\";\r\n\r\nfunction Global() {\r\n  return (\r\n    <div>\r\n      <Appbar />\r\n      <br />\r\n      <CRadio />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Global;\r\n","import { css } from \"@emotion/react\";\r\nimport ClipLoader from \"react-spinners/RingLoader\";\r\nimport \"./Spinner.css\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: blue;\r\n`;\r\n\r\nfunction Spinner({ loading }) {\r\n  return (\r\n    <div\r\n      className=\"spinner-wrapper\"\r\n      style={{ display: loading ? \"flex\" : \"none\" }}\r\n    >\r\n      <ClipLoader color={\"blue\"} loading={loading} css={override} size={150} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Global from \"./components/global/Global\";\r\nimport React from \"react\";\r\nimport { HOST } from \"./constants/constants\";\r\nimport Spinner from \"./components/spinner/Spinner\";\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nfunction App() {\r\n    const [data, setData] = React.useState([]);\r\n    const [schema, setSchema] = React.useState({});\r\n    const [columns, setColumns] = React.useState([]);\r\n    const [name, setName] = React.useState(\"No Data !\");\r\n    const [btnActive, setBtnActive] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [tabNumber, setTabNumber] = React.useState(0);\r\n    const [selected, setSelected] = React.useState(\"\");\r\n    const [disbaleUpdateBtn, setDisabledUpdatedBtn] = React.useState(true);\r\n    const [container, setContainer] = React.useState(\"\");\r\n    const [url, setUrl] = React.useState(\"\");\r\n\r\n    const getData = async (filename) => {\r\n        const resp2 = await fetch(HOST + \"all\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                filename,\r\n            }),\r\n        });\r\n        const returnedData = await resp2.json();\r\n        setData(returnedData);\r\n        console.log(returnedData);\r\n        if (returnedData.length === 0) return alert(\"all data are deleted\");\r\n        setColumns(Object.keys(returnedData[0]));\r\n        setBtnActive(true);\r\n    };\r\n\r\n    const getSchema = async () => {\r\n        const resp = await fetch(HOST + \"schema\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                filename: localStorage.getItem(\"file\"),\r\n            }),\r\n        });\r\n        const schema = await resp.json();\r\n        store.setSchema(schema);\r\n    };\r\n\r\n    const store = {\r\n        data,\r\n        setData,\r\n        schema,\r\n        setSchema,\r\n        setColumns,\r\n        columns,\r\n        name,\r\n        setName,\r\n        btnActive,\r\n        setBtnActive,\r\n        getData,\r\n        getSchema,\r\n        setLoading,\r\n        tabNumber,\r\n        setTabNumber,\r\n        selected,\r\n        setSelected,\r\n        disbaleUpdateBtn,\r\n        setDisabledUpdatedBtn,\r\n        container,setContainer,\r\n        url,setUrl\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={store}>\r\n            <Spinner loading={loading} />\r\n            <Global />\r\n            <Home />\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}